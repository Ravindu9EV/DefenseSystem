/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package defense_system.view;

import defense_system.controller.MainController;
import com.sun.java.accessibility.util.AWTEventMonitor;
import defense_system.DefenseObserver;

import defense_system.Observer;

import defense_system.Observable;
import defense_system.StrengthEnum;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;


/**
 *
 * @author ASUS
 */
public class Helicopter extends javax.swing.JFrame implements DefenseObserver {

    /**
     * Creates new form Helicopter
     */
    
    private static MainController mainController;
    /*public Helicopter() {
        initComponents();
        setVisible(true);
    }*/
    private int soldiers=8;
    private final int max=12;
   
    public Helicopter(MainController mainController) {
        this.mainController=mainController;
       
        initComponents();
        shoot.setEnabled(false);
        btnMissile.setEnabled(false);
        btnLaserOp.setEnabled(false);
        txtDisplay.setEditable(false);
        soldierCount.setValue(8);
        this.soldiers=(int) soldierCount.getValue();
        
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        shoot = new javax.swing.JButton();
        btnLaserOp = new javax.swing.JButton();
        btnMissile = new javax.swing.JButton();
        lblSoldierCount = new javax.swing.JLabel();
        lblArea = new java.awt.Label();
        soldierCount = new javax.swing.JSpinner();
        lblAmmoCount = new javax.swing.JLabel();
        ammoCount = new javax.swing.JSpinner();
        position = new javax.swing.JCheckBox();
        jSlider1 = new javax.swing.JSlider();
        send = new javax.swing.JButton();
        Msg = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDisplay = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Helicopter");
        setBackground(new java.awt.Color(255, 255, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        shoot.setText("Shoot");
        shoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shootActionPerformed(evt);
            }
        });

        btnLaserOp.setText("Laser Operation");
        btnLaserOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaserOpActionPerformed(evt);
            }
        });

        btnMissile.setText("Misile Operation");
        btnMissile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMissileActionPerformed(evt);
            }
        });

        lblSoldierCount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSoldierCount.setText("Soldier Count");

        lblArea.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblArea.setText("Area Not Cleared\n");

        soldierCount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                soldierCountStateChanged(evt);
            }
        });

        lblAmmoCount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAmmoCount.setText("Ammo Count");

        position.setText("Position");
        position.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                positionItemStateChanged(evt);
            }
        });

        jSlider1.setBackground(new java.awt.Color(204, 204, 204));
        jSlider1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jSlider1.setForeground(new java.awt.Color(255, 0, 51));
        jSlider1.setMajorTickSpacing(20);
        jSlider1.setMinorTickSpacing(10);
        jSlider1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(100);

        send.setBackground(new java.awt.Color(0, 102, 102));
        send.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        send.setForeground(new java.awt.Color(255, 255, 255));
        send.setText("Send");
        send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sendMousePressed(evt);
            }
        });

        Msg.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                MsgInputMethodTextChanged(evt);
            }
        });

        txtDisplay.setColumns(20);
        txtDisplay.setRows(5);
        jScrollPane1.setViewportView(txtDisplay);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(shoot, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnLaserOp, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnMissile, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel1))
                                    .addComponent(lblArea, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblSoldierCount, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblAmmoCount, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(soldierCount, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ammoCount, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(position, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Msg, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(send))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblArea, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(shoot, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnMissile, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLaserOp, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSoldierCount)
                            .addComponent(soldierCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAmmoCount, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ammoCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(position, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Msg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLaserOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaserOpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLaserOpActionPerformed

    private void shootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shootActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_shootActionPerformed

    private void btnMissileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMissileActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnMissileActionPerformed

    private void positionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_positionItemStateChanged
        // TODO add your handling code here:
        if(position.isSelected()){
            enableButtons();
        }
        
    }//GEN-LAST:event_positionItemStateChanged

    private void sendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_sendMouseClicked

    private void MsgInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_MsgInputMethodTextChanged
        // TODO add your handling code here:
        //sendMsg=evt.getCaret().toString();
    }//GEN-LAST:event_MsgInputMethodTextChanged

    private void sendMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMousePressed
        // TODO add your handling code here:
        sendMsg();
    }//GEN-LAST:event_sendMousePressed

    private void soldierCountStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_soldierCountStateChanged
        // TODO add your handling code here:
        
        if(this.soldiers!=(int)soldierCount.getValue() && (int)soldierCount.getValue()>=0){
            setSoldierCount((int)soldierCount.getValue());
            displaySoldierCount();
            System.out.println(soldiers+"-"+((int)soldierCount.getValue()));
        }
    }//GEN-LAST:event_soldierCountStateChanged
    // -----------------update the Area status-------------
    public void update(){
       if(mainController.getArea()){
           lblArea.setText("Area cleared");
       }else{
           lblArea.setText("Area Not cleared");
       }
     
           
    }
    //------------implement get obj title function--------------
    public String getObjTitle(){
        return super.getTitle();
    }
    // ----send messeges to MAinController---------------
    public void sendMsg(){
        mainController.reciveMsg(super.getTitle(),Msg.getText());
    }
    //--------------display messeges ----------
   public void displayMsg(){
      
      txtDisplay.append(mainController.getMainMsg()+"\n");
      
   }
   
   public void displayPrivateMsg(){
       txtDisplay.append("(private)"+mainController.getPrivateMsg()+"\n");
   }
   
   //------------------------------
//   public void position(){
//       if(position.isSelected()){
//        enableButtons();
//       }
//   }
   public boolean position(){
       return position.isSelected();
   }
    public void enableButtons(){
        
        if(position.isSelected()){

              switch(mainController.getStrength()){
                  case CLOSED:
                      shoot.setEnabled(false);
                      btnMissile.setEnabled(false);
                      btnLaserOp.setEnabled(false);
                      break;
                  case LOW:
                      shoot.setEnabled(true);
                      btnMissile.setEnabled(false);
                      btnLaserOp.setEnabled(false);
                      break;
                  case MEDIUM:
                      shoot.setEnabled(true);
                      btnMissile.setEnabled(true);
                      btnLaserOp.setEnabled(false);
                      break;
                  case HIGH: 
                      shoot.setEnabled(true);
                      btnMissile.setEnabled(true);
                      btnLaserOp.setEnabled(true);
                      break;
              }
        }
    }
    /**
     * @param args the command line arguments
     */
    
    //--------setSoldier Count--------
    public void setSoldierCount(int soldiers){
       if(soldiers!=this.soldiers & soldiers<=max) {
         this.soldiers=soldiers;
        
       }
       
    }
    //--------------get Soldier count--------
   
    
   public void displaySoldierCount(){
           mainController.displayExtraDetais(super.getTitle(),"Soldier Count", ""+soldiers);
       
   }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
         
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Helicopter(mainController).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Msg;
    private javax.swing.JSpinner ammoCount;
    private javax.swing.JButton btnLaserOp;
    private javax.swing.JButton btnMissile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel lblAmmoCount;
    private java.awt.Label lblArea;
    private javax.swing.JLabel lblSoldierCount;
    private javax.swing.JCheckBox position;
    private javax.swing.JButton send;
    private javax.swing.JButton shoot;
    private javax.swing.JSpinner soldierCount;
    private javax.swing.JTextArea txtDisplay;
    // End of variables declaration//GEN-END:variables

    

    

   

    
   

   

  

   

   
}
