/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package defense_system.view;

import defense_system.DefenseObserver;
import defense_system.StrengthEnum;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;


/**
 *
 * @author ASUS
 */
public class Tank extends javax.swing.JFrame implements DefenseObserver {

    /**
     * Creates new form Tank
     */
    private static MainController mainController;
    private int soldiers;
    
    public Tank(MainController mainController ) {
        this.mainController=mainController;
       
        initComponents();
        btnShoot.setEnabled(false);
        btnMissileOp.setEnabled(false);
        btnRedarOp.setEnabled(false);
        btnRotateShooting.setEnabled(false);
        txtDisplay.setEditable(false);
        soldierCount.setValue(15);
        soldiers=(int)soldierCount.getValue();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblArea = new javax.swing.JLabel();
        btnRedarOp = new javax.swing.JButton();
        btnShoot = new javax.swing.JButton();
        btnMissileOp = new javax.swing.JButton();
        btnRotateShooting = new javax.swing.JButton();
        sendMsgs = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        lblSoldierCount = new javax.swing.JLabel();
        lblAmmoCount = new javax.swing.JLabel();
        soldierCount = new javax.swing.JSpinner();
        ammoCount = new javax.swing.JSpinner();
        jSlider1 = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDisplay = new javax.swing.JTextArea();
        position = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tank");

        lblArea.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblArea.setText("Area Not Cleared");

        btnRedarOp.setText("Redar Operation");

        btnShoot.setText("Shoot");

        btnMissileOp.setText("Missile Operation");

        btnRotateShooting.setText("Rotate Shooting");

        btnSend.setBackground(new java.awt.Color(0, 102, 102));
        btnSend.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSend.setForeground(new java.awt.Color(255, 255, 255));
        btnSend.setText("Send");
        btnSend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSendMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnSendMousePressed(evt);
            }
        });

        lblSoldierCount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSoldierCount.setText("Soldier Count");

        lblAmmoCount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAmmoCount.setText("Ammo Count");

        soldierCount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                soldierCountStateChanged(evt);
            }
        });

        jSlider1.setBackground(new java.awt.Color(204, 204, 204));
        jSlider1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jSlider1.setForeground(new java.awt.Color(255, 51, 51));
        jSlider1.setMajorTickSpacing(20);
        jSlider1.setMinorTickSpacing(10);
        jSlider1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(100);

        txtDisplay.setColumns(20);
        txtDisplay.setRows(5);
        jScrollPane1.setViewportView(txtDisplay);

        position.setText("Position");
        position.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                positionItemStateChanged(evt);
            }
        });
        position.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                positionStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblArea, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnShoot, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMissileOp, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAmmoCount, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSoldierCount, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(position, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRedarOp, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRotateShooting)))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ammoCount, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(soldierCount, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sendMsgs, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSend)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(lblArea)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnShoot)
                                    .addComponent(btnMissileOp))
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnRedarOp)
                                    .addComponent(btnRotateShooting)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(soldierCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSoldierCount))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblAmmoCount)
                                    .addComponent(ammoCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(3, 3, 3)
                        .addComponent(position)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sendMsgs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSendMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnSendMouseClicked

    private void btnSendMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSendMousePressed
        // TODO add your handling code here:
        sendMsg();
    }//GEN-LAST:event_btnSendMousePressed

    private void positionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_positionStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_positionStateChanged

    private void positionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_positionItemStateChanged
        // TODO add your handling code here:
        if(position()){
            enableButtons();
        }
        
    }//GEN-LAST:event_positionItemStateChanged

    private void soldierCountStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_soldierCountStateChanged
        // TODO add your handling code here:
        if(soldiers>(int)soldierCount.getValue() && (int)soldierCount.getValue()>=0){
            setSoldierCount((int)soldierCount.getValue());
            displaySoldierCount();
        }
    }//GEN-LAST:event_soldierCountStateChanged

    /**
     * @param args the command line arguments
     */
    //-----------update status of the area----------
    public void update(){
        if(mainController.getArea()){
            lblArea.setText("Area Cleared");
        }else{
            lblArea.setText("Area Not Cleared");
        }
    }
    
    //------------implement get obj title function--------------
    public String getObjTitle(){
        return super.getTitle();
    }
    
    //-------send messeges---------------
    public void sendMsg(){
        
        mainController.reciveMsg(super.getTitle(),sendMsgs.getText());
            
       
    }
    
    //----------display messeges---------
    public void displayMsg(){
        txtDisplay.append(mainController.getMainMsg()+"\n");
        
    }
    //-----------display private messeges----------
     public void displayPrivateMsg(){
       txtDisplay.append("(private)"+mainController.getPrivateMsg()+"\n");
   }
    
    //------------enable buttons-------------
    
    public boolean position(){
       return position.isSelected();
   }
//    public void position(){
//       if(position.isSelected()){
//           enableButtons();
//       }
//   }
    public void enableButtons(){
      

            
              switch(mainController.getStrength()){
                  case CLOSED:
                      btnShoot.setEnabled(false);
                      btnMissileOp.setEnabled(false);
                      btnRedarOp.setEnabled(false);
                      btnRotateShooting.setEnabled(false);
                      break;
                  case LOW:
                      btnShoot.setEnabled(true);
                      btnMissileOp.setEnabled(false);
                      btnRedarOp.setEnabled(false);
                      btnRotateShooting.setEnabled(false);
                      break;
                  case MEDIUM:
                      btnShoot.setEnabled(true);
                      btnMissileOp.setEnabled(true);
                      btnRedarOp.setEnabled(false);
                      btnRotateShooting.setEnabled(false);
                      break;
                  case HIGH:
                      btnShoot.setEnabled(true);
                      btnMissileOp.setEnabled(true);
                      btnRedarOp.setEnabled(true);
                      btnRotateShooting.setEnabled(false);
                      break;
                  case STRONG:
                       btnShoot.setEnabled(true);
                      btnMissileOp.setEnabled(true);
                      btnRedarOp.setEnabled(true);
                      btnRotateShooting.setEnabled(true);
                      break;
              }
       
            
    }
    
    //--------set Soldiers Count--------
    public void setSoldierCount(int soldiers){
        if(soldiers<this.soldiers){
            this.soldiers=soldiers;
        }
    }
    
    public void displaySoldierCount(){
           mainController.displayExtraDetais(super.getTitle(),"Soldier Count", ""+soldiers);
   }
   public static void main(String args[]) {
        /* Set the Nimbus look and feel */
    
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
/*
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tank(mainController).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner ammoCount;
    private javax.swing.JButton btnMissileOp;
    private javax.swing.JButton btnRedarOp;
    private javax.swing.JButton btnRotateShooting;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnShoot;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JLabel lblAmmoCount;
    private javax.swing.JLabel lblArea;
    private javax.swing.JLabel lblSoldierCount;
    private javax.swing.JCheckBox position;
    private javax.swing.JTextField sendMsgs;
    private javax.swing.JSpinner soldierCount;
    private javax.swing.JTextArea txtDisplay;
    // End of variables declaration//GEN-END:variables
}
